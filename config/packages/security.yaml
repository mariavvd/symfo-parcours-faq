security:
    
    # encoder
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        database_users:
            entity: { class: App\Entity\User, property: username }

    #firewalls            
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        main:
            # this firewall applies to all URLs
            pattern: ^/
             # but the firewall does not require login on every page
            # denying access is done in access_control or in your controllers
            anonymous: true

            form_login: true
                # The route name that the login form submits to
                check_path: app_login
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: app_login
                # Secure the login form against CSRF
                csrf_token_generator: security.csrf.token_manager
                default_target_path: backend_question_index 
            
            provider: database_users

            logout:
                # The route name the user can go to in order to logout
                path: security_logout
                # The name of the route to redirect to after logging out
                target: home
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator



            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/backend/tag, roles: ROLE_MODERATOR }
        - { path: ^/backend, roles: ROLE_USER }
        - { path: ^/user$, roles: ROLE_ADMIN }
        - { path: ^/user/$, roles: ROLE_ADMIN }
    

    role_hierarchy:
        ROLE_MODERATOR: ROLE_USER
        ROLE_ADMIN: ROLE_MODERATOR
